spring:
  cloud:
    gateway:
      routes:
        # 自定义路由ID,保持唯一(基于consul的网关配置)
        - id: emily
          #目标服务地址
          uri: lb://EmilyFramework
          #顺序，当请求匹配到多个路由时，使用顺序小的
          order: 0
          # 断言，路由条件，
          predicates:
            # 根据路由断言请求的目标服务器
            - Path=/emily/api/**
            # 根据请求Method头断言
            - Method=POST,GET
            #- After=2022-04-20T15:35:08.721398+08:00[Asia/Shanghai]
            #- Before=2022-04-20T15:35:08.721398+08:00[Asia/Shanghai]
            #- Between=2022-04-20T15:35:08.721398+08:00[Asia/Shanghai],2022-04-20T16:35:08.721398+08:00[Asia/Shanghai]
            - RemoteAddr=192.168.0.108/24,127.0.0.1
          filters:
            # 删除前缀过滤器
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/circuitBreaker/fallback
                  # 根据返回的状态码熔断降级
                statusCodes:
                  - 500
                  - 404
        # 自定义路由ID,保持唯一（基于指定url权重的网关配置）
        - id: weight-high
          #目标服务地址
          uri: https://127.0.0.1:9000
          #顺序，当请求匹配到多个路由时，使用顺序小的
          order: 0
          # 断言，路由条件，
          predicates:
            # 根据路由断言请求的目标服务器
            - Path=/weight/api/test/{segment}
            # 根据请求Method断言
            - Method=POST,GET
            # 根据分组及百分比断言请求服务器的权重，group, 8(80%)
            - Weight=group, 20
          filters:
            # 删除前缀过滤器
            - StripPrefix=1
        # 自定义路由ID,保持唯一（基于指定url权重的网关配置）
        - id: weight-low
          uri: http://127.0.0.1:9111
          predicates:
            # 根据路由断言请求的目标服务器
            - Path=/weight/api/test/{segment}
            # 根据请求Method断言
            - Method=POST,GET
            # 根据分组及百分比断言请求服务器的权重，group, 8(80%)
            - Weight=group, 20
          filters:
            # 删除前缀过滤器
            - StripPrefix=1