server:
  port: 443
  # 优雅停机
  shutdown: graceful
  ssl:
    # 是否启用SSL支持
    enabled: true
    # 标识秘钥存储中秘钥的别名
    key-alias: emily
    # 访问秘钥存储的密码
    key-store-password: 123456
    # 指定保存SSL证书的秘钥存储的路径（通常是jks文件）
    key-store: classpath:emily.p12
    # 秘钥存储的类型
    key-store-type: PKCS12
    # 要使用的SSL协议
    protocol: TLS
  http:
    # 是否开启http端口号
    enable: true
    # http端口号
    port: 80
    # 优雅停机
    shutdown: graceful
    # http请求是否自动跳转到https，默认：true
    http-to-https: true
  netty:
    # 网络通道(channel)连接超时时间
    connection-timeout: PT10S
    # h2c(即：http/2协议的明文版本)升级请求的最大内容长度，默认：0B
    h2c-max-content-length: 0B
    # http请求解码的初始缓冲区大小，默认：128B
    initial-buffer-size: 128B
    # HTTP请求可解码的最大块大小，默认：8KB
    max-chunk-size: 8KB
    # http请求的初始行可以解码的最大长度
    max-initial-line-length: 4KB
    # 解码请求时是否验证标头，默认：true
    validate-headers: true
management:
  server:
    port: 7443
    ssl:
      # 是否开启SSL支持，默认：true
      enabled: true
      # 标识秘钥存储中秘钥的别名
      key-alias: emily
      #访问秘钥存储的密码
      key-store-password: 123456
      # 指定保存SSL证书的秘钥存储的路径（通常是jks文件）
      key-store: classpath:emily.p12
      # 秘钥存储的类型
      key-store-type: PKCS12
      # 要使用的SSL协议
      protocol: TLS
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      # 开启网关端点，默认：true
      enabled: true
spring:
  profiles:
    # 指定包含哪些配置文件
    include: gateway

---
# Redis 缓存配置
spring:
  redis:
    # 客户端连接类型
    client-type: lettuce
    # 服务IP地址
    host: 172.30.67.122
    # 端口号
    port: 6379
    # 用户名
    username:
    # 密码
    password: admin
    # 读取超时时间
    timeout: PT3S
    # 连接超时时间
    connect-timeout: PT3S
    # 基于netty的线程池
    lettuce:
      pool:
        # 连接池最大连接数（使用复值标识没有限制），默认：8
        max-active: 8
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接， 默认：0
        min-idle: 0
        # 连接阻塞的最长时间（也就是多长时间之后会抛出异常），默认：-1 无限阻塞
        max-wait: -1ms
        # 空闲对象逐出器线程的运行间隔时间，为正值时，空闲逐出器线程启动，否则不执行空闲对象逐出
        time-between-eviction-runs: PT0.1S
---
spring:
  cloud:
    loadbalancer:
      ribbon:
        # 关闭ribbon客户端负载均衡策略，默认：true
        enabled: false
      service-discovery:
        # 服务发现调用超时时间，默认30S（缓存关闭时有效:DiscoveryClientServiceInstanceListSupplier）
        timeout: PT30S
      # 负载均衡缓存从consul上拿到的服务实例信息配置（CachingServiceInstanceListSupplier）
      cache:
        # 开启springcloud loadbalancer负载均衡缓存机制，默认：true
        enabled: true
        # 缓存过期时间，默认：35 单位：s
        #ttl: 35
        # 缓存初始化容量，默认：256
        #capacity: 256
        # 使用java8高性能缓存caffeine
        caffeine:
          # initialCapacity：初始化容量，默认：-1
          # ------------基于大小的驱逐策略--------------
          # maximumSize：最大容量，默认：-1
          # maximumWeight：权重大小，默认：-1（maximumSize和maximumWeight不可以同时设置）
          # ------------基于引用的的去捉策略-------------
          # weakKeys：使用弱引用存储key
          # weakValues：使用弱引用存储value
          # softValues：使用软引用存储value
          # -------------基于时间的驱逐策略---------------
          # expireAfterAccess：在最后一次访问或者写入后开始计时，在指定的时间后过期。假如一直有请求访问该Key，那么这个缓存将一直不会过期
          # expireAfterWrite：在最后一次写入缓存后开始计时，在指定的时间后过期
          # refreshAfterWrite：指定在创建或者最近一次更新缓存后经过固定的时间刷新缓存，
          # recordStats: 开启统计监控功能
          spec: initialCapacity=256,maximumSize=1000,expireAfterWrite=35s,recordStats
  zipkin:
    # zipkin服务器地址，默认是：http://localhost:9411/
    base-url: http://172.30.67.122:9411
    service:
      # zipkin中展示的服务名称
      name: ${spring.application.name}
    sender:
      # 向zipkin发送spans的方法，默认：web
      type: web
  sleuth:
    reactor:
      # 链路追踪上下文的侵入性，manual：以最小的侵入性的方式包装每个REACTOR，而无需通过跟踪上下文，为了向后兼容，默认是：DECORATE_ON_EACH
      instrumentation-type: decorate_on_each
    sampler:
      # 采样率，0-1上的小数
      probability: 1.0
    redis:
      # 启用Redis跨域信息传播
      enabled: true
      # 服务名
      remote-service-name: redis
    integration:
      # 启用spring集成sleuth instrumentation
      enabled: true
    # 断路器
    circuitbreaker:
      # seluth是否开启断路器检查，默认：true
      enabled: true
      resilience4j:
        # 关闭resilience4j断路器自动化配置
        enabled: false
        blocking:
          enabled: false
---
spring:
  emily:
    accesslog:
      # 开启日志记录组件
      enable: true
    gateway:
      circuitbreaker:
        # 断路器超时时间
        timeout: 3000
      # 指定网关路由访问日志记录限制
      exclude-logging-routes:
        #- id: rabbitmq2
         # path: /rabbitmq/**
        #- id: rabbitmq3
         # path: /rabbitmq/**
        #- id: rabbitmq4
         # path: /rabbitmq/**
        #- id: consul
         # path: /ui/**,/v1/**
      # 指定对外部网络访问限制
      exclude-externel-routes:
        - id: rabbitmq2
          path: /rabbitmq/**
        - id: rabbitmq3
          path: /rabbitmq/**
        - id: rabbitmq4
          path: /rabbitmq/**
      # 指定外部网络访问协议限制
      include-schemas: http,https
